import { useEffect, useState } from "react";
import { Button } from "@/components/ui/button.tsx";
import { Autoplay } from "swiper/modules";
import { Swiper, SwiperSlide } from "swiper/react";
import "swiper/css";
import "swiper/css/autoplay";
import lady from "/src/assets/rose.webp";
import cinema from "/src/assets/cinema.webp";
import music from "/src/assets/headphone-guy_1.webp";
import playlist from "/src/assets/microphone.webp";
import header from "/src/assets/robo-singer.webp";
import gender from "/src/assets/lady.webp";

const images = [
  {
    img: header,
    words: "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ TopMusicBot! üé∂",
    isHeader: true,
  },
  {
    img: lady,
    words: "–£–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ JPG –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: –ó–∞–≥—Ä—É–∂–∞–π—Ç–µ —Ñ–æ—Ç–æ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è.",
  },
  {
    img: cinema,
    words:
      "–ò—Å–∫–∞—Ç—å —Ñ–∏–ª—å–º—ã –ø–æ —Å—Ü–µ–Ω–∞–º –∏–ª–∏ —Ç–∏–ø—É: –û–ø–∏—Å–∞–Ω–∏–µ —Å—Ü–µ–Ω—ã ‚Äî –∏ –±–æ—Ç –Ω–∞–π–¥–µ—Ç —Ñ–∏–ª—å–º!",
  },
  {
    img: music,
    words:
      "–ù–∞—Ö–æ–¥–∏—Ç—å –ø–æ—Ö–æ–∂–∏–µ –ø–µ—Å–Ω–∏: –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ, –∏ –±–æ—Ç –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –ø–æ—Ö–æ–∂–∏–µ —Ç—Ä–µ–∫–∏.",
  },
  {
    img: gender,
    words: "–û–ø—Ä–µ–¥–µ–ª—è—Ç—å –∂–∞–Ω—Ä –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏: –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏.",
  },
  {
    img: playlist,
    words:
      "–°–æ–∑–¥–∞–≤–∞—Ç—å –ø–ª–µ–π–ª–∏—Å—Ç—ã –ø–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é: –û–ø–∏—à–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ, –∏ –±–æ—Ç —Å–æ–±–µ—Ä–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Ç—Ä–µ–∫–∏.",
  },
];

const CarauselSection = () => {
  const [isMobile, setIsMobile] = useState(false);
  const [imagesLoaded, setImagesLoaded] = useState(false);

  // Handle screen size detection
  useEffect(() => {
    const handleResize = () => {
      setIsMobile(window.innerWidth < 768);
    };

    handleResize();
    window.addEventListener("resize", handleResize);

    return () => {
      window.removeEventListener("resize", handleResize);
    };
  }, []);

  // Preload images
  useEffect(() => {
    const imagePromises = images.map((i) => {
      const img = new Image();
      img.src = i.img;
      return new Promise((resolve) => {
        img.onload = resolve;
      });
    });

    Promise.all(imagePromises).then(() => {
      setImagesLoaded(true);
    });
  }, [isMobile]);

  const handleClick = () => {
    location.href = "https://t.me/Youtu2018bot";
  };

  if (!imagesLoaded) {
    return (
      <div className="flex justify-center items-center h-full w-full">
        Loading...
      </div>
    );
  }

  return (
    <Swiper
      spaceBetween={0}
      slidesPerView={1}
      loop={true}
      autoplay={{
        delay: 3000,
        disableOnInteraction: false,
      }}
      modules={[Autoplay]}
      className="h-screen"
    >
      {images.map((i, idx) => (
        <SwiperSlide
          key={idx}
          style={{
            backgroundRepeat: "no-repeat",
            backgroundPosition: "center",
            backgroundSize: "cover",
            backgroundImage: `url(${i.img})`,
          }}
          className=" w-full  h-full px-2"
        >
          <div className="flex justify-center items-center w-full h-full">
            <div className="bg-[rgba(255, 255, 255, 0)] flex justify-center items-center flex-col py-[8px] px-[16px] backdrop-blur-[21px] max-w-[500px]  backdrop-saturate-[138%]  rounded-md p-2 ">
              {i.isHeader ? (
                <>
                  <h1 className="font-bold text-[26px] text-white md:text-3xl lg:text-4xl text-center w-full">
                    {i.words}
                  </h1>
                  <p className="my-4 text-[16px] max-w-[400px] md:text-[18px] overflow-hidden text-center text-white">
                    TopMusicBot ‚Äî –≤–∞—à –∏–¥–µ–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –º–∏—Ä–µ –º—É–∑—ã–∫–∏ –∏ –∫–∏–Ω–æ. –°
                    –ø–æ–º–æ—â—å—é –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –≤—ã –º–æ–∂–µ—Ç–µ:
                  </p>
                </>
              ) : (
                <p className="my-4 text-[16px] max-w-[400px] md:text-[18px] overflow-hidden text-center text-white">
                  {i.words}
                </p>
              )}

              <div className="w-full flex justify-center items-center">
                <Button
                  size="sm"
                  onClick={handleClick}
                  className="py-[8px] px-[16px] bg-red-600 mx-auto"
                >
                  –û—Ç–∫—Ä—ã—Ç—å –ë–æ—Ç
                </Button>
              </div>
            </div>
          </div>
        </SwiperSlide>
      ))}
    </Swiper>
  );
};

export default CarauselSection;
